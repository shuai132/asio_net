name: build

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'


jobs:
  build-and-test:

    name: ${{ matrix.toolchain }}-${{ matrix.configuration }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        toolchain:
          - linux-gcc
          - macos-clang
          - windows-msvc
          - windows-mingw

        configuration:
          - Debug
          - Release

        include:
          - toolchain: linux-gcc
            os: ubuntu-latest
            compiler: gcc
            env:
              CMAKE_OPTIONS: "-DASIO_NET_ENABLE_SSL=ON"

          - toolchain: macos-clang
            os: macos-latest
            compiler: clang
            env:
              CMAKE_OPTIONS: "-DASIO_NET_ENABLE_SSL=ON"

          - toolchain: windows-msvc
            os: windows-latest
            compiler: msvc

          - toolchain: windows-mingw
            os: windows-latest
            compiler: mingw
            env:
              CMAKE_OPTIONS: "-G \"MinGW Makefiles\""

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Init ASIO
        run: |
          git clone https://github.com/chriskohlhoff/asio.git -b asio-1-24-0 --depth=1

      - name: Configure (${{ matrix.configuration }})
        env:
          ASIO_PATH: asio/asio/include
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} ${{ matrix.env.CMAKE_OPTIONS }} -DASIO_NET_DISABLE_ON_DATA_PRINT=ON

      - name: Build with ${{ matrix.compiler }}
        run: cmake --build build --config ${{ matrix.configuration }}

      - name: Test TCP
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_tcp

      - name: Test TCP (big data)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_tcp_bigdata

      - name: Test TCP (reconnect)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_tcp_reconnect

      - name: Test UDP
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_udp

      - name: Test RPC
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_rpc

      - name: Test RPC (rpc_config)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_rpc_config

      - name: Test RPC (reconnect)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_rpc_reconnect

      - name: Test RPC (ssl)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: |
          #./asio_net_test_rpc_ssl
          echo "skip for avoid wait too long"

      - name: Test Domain TCP
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_domain_tcp

      - name: Test Domain UDP
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_domain_udp

      - name: Test Domain RPC
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: build
        run: ./asio_net_test_domain_rpc
